// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WpfApp1.Data;

namespace WpfApp1.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220531140657_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WpfApp1.Models.Kolejka", b =>
                {
                    b.Property<int>("KolejkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazwaKolejki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KolejkaId");

                    b.ToTable("Kolejkas");

                    b.HasData(
                        new
                        {
                            KolejkaId = 1,
                            NazwaKolejki = "test2"
                        });
                });

            modelBuilder.Entity("WpfApp1.Models.Konfiguracja", b =>
                {
                    b.Property<int>("KonfiguracjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Hasło")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaKolejki")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NazwaUzytkownika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Port")
                        .HasColumnType("int");

                    b.Property<string>("VHostName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KonfiguracjaId");

                    b.ToTable("Konfiguracjas");

                    b.HasData(
                        new
                        {
                            KonfiguracjaId = 1,
                            Hasło = "quest",
                            HostName = "localhost",
                            NazwaKolejki = "test1",
                            NazwaUzytkownika = "quest",
                            Port = 5672,
                            VHostName = "localhost"
                        });
                });

            modelBuilder.Entity("WpfApp1.Models.Zadanie", b =>
                {
                    b.Property<int>("ZadanieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazwaZadania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WartośćDoPoliczenia")
                        .HasColumnType("int");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("ZadanieId");

                    b.ToTable("Zadanies");

                    b.HasData(
                        new
                        {
                            ZadanieId = 1,
                            NazwaZadania = "Prime",
                            WartośćDoPoliczenia = 3,
                            status = false
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
